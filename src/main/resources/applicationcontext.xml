<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--=================1.spring整合service层====================-->
    <!--1.1 设置业务逻辑层的包扫描器，目的是在制定的路径下，使用@Service注解的类，Spring负责创建对象，并添加依赖。-->
    <!--1.1.1 指定注解扫描，这里的包下面的注解才可以被扫描到，正常使用-->
    <context:component-scan base-package="com.uin.service"/>
    <!--1.2 配置事务管理器-->
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          id="dataSourceTransactionManager">
        <!--配置事务管理器的数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--1.2.1 添加事务的切面-->
    <tx:advice transaction-manager="dataSourceTransactionManager" id="myadvice">
        <tx:attributes>
            <!--意思就是对于我现在查询的数据，是只让读，别的其他操作，比如修改、删除、增加操作是进不来的-->
            <tx:method name="*select*" read-only="true"/>
            <tx:method name="*find*" read-only="true"/>
            <tx:method name="*get*" read-only="true"/>
            <tx:method name="*search*" read-only="true"/>
            <!--事务的传播机制
                propagation，当一个事务方法被另一个事务方法调用时，这个事务方法应该如何运行。
                REQUIRED，默认的传播行为，如果当前存在事务，则当前方法就在当前事务中进行，
                          如果不存在，就新建一个事务，并在新建的事务中运行。
             -->
            <tx:method name="*insert*" propagation="REQUIRED"/>
            <tx:method name="*add*" propagation="REQUIRED"/>
            <tx:method name="*save*" propagation="REQUIRED"/>
            <tx:method name="*delete*" propagation="REQUIRED"/>
            <tx:method name="*remove*" propagation="REQUIRED"/>
            <tx:method name="*clear*" propagation="REQUIRED"/>
            <tx:method name="*update*" propagation="REQUIRED"/>
            <tx:method name="*modify*" propagation="REQUIRED"/>
            <tx:method name="*change*" propagation="REQUIRED"/>
            <tx:method name="*set*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <!--1.2.2完成切面和切入点的织入-->
    <!--完成业务逻辑层-->
    <aop:config>
        <aop:pointcut id="mypoint" expression="execution(* com.uin..service.*.*(..))"/>
        <aop:advisor advice-ref="myadvice" pointcut-ref="mypoint"/>
    </aop:config>

    <!--===================spring整合mybatis==================-->
    <!--==================1.配置数据源=============-->
    <!--1.1 导入外部属性文件，这里就是引入数据源文件database.properties-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--1.2 整合数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>
    <!--======2.将Mybatis的SqlSession交由Spring的SqlSessionFactoryBean去管理==========-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--2.1 配置数据源 引用注入-->
        <property name="dataSource" ref="dataSource"/>
        <!--2.2 配置Mybatis的配置文件-->
        <property name="configLocation" value="classpath:mybatis_config.xml"/>
        <!--2.3 配置pageHelper分页插件，如果不使用，可以忽略这个配置-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个，具体参数可以去官网查询，根据自己的需要进行配置 -->
                        <value>
                            helperDialect=postgresql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
        <!--2.4 配置实体类 其别名-->
        <property name="typeAliasesPackage" value="com.uin.pojo"/>
    </bean>
    <!--===============3.创建mapper文件的扫描器============================-->
    <!--3.1 spring和mybatis整合的关键，配置扫描mapper的包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.uin.mapper"/>
    </bean>
</beans>
